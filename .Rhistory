legend.text = element_text(size = 10, face = "italic"),
legend.background = element_rect(fill = "gainsboro", size = 0.5, linetype = "solid", colour = "red")
)
# theme(legend.position = "bottom", )
ggplot()+
geom_sf(data = limites_terrestres, size = 1, color = "black", fill = "white")+
geom_sf(data = pistes_cyclables, size = 1.5, aes(color = TYPE_VOIE),  show.legend = "line")+
scale_color_manual(values = couleurs_voie,name = "Types de voie")+
#labs(color = 'Types de voie')+
geom_sf(data = accidents_velo, pch = 24, cex = 2, fill = "red", color = "black")+
#geom_sf(data = accidents_velo, aes(fill= "red",pch = 24, cex = 2, color = "black"),show.legend = "point")+
scale_fill_manual(values = "red",name = "accidents")+
ggtitle("Types de voie cyclable et Accidents routiers impliquant des vélos")+
# labs(color = 'Types de voie', point = "Accidents")+
theme(legend.position = "top",
legend.title = element_text(colour="grey", size = 11, face = "bold"),
legend.text = element_text(size = 10, face = "italic"),
legend.background = element_rect(fill = "gainsboro", size = 2, linetype = "solid", colour = "red")
)
# theme(legend.position = "bottom", )
ggplot()+
geom_sf(data = limites_terrestres, size = 1, color = "black", fill = "white")+
geom_sf(data = pistes_cyclables, size = 1.5, aes(color = TYPE_VOIE),  show.legend = "line")+
scale_color_manual(values = couleurs_voie,name = "Types de voie")+
#labs(color = 'Types de voie')+
geom_sf(data = accidents_velo, pch = 24, cex = 2, fill = "red", color = "black")+
#geom_sf(data = accidents_velo, aes(fill= "red",pch = 24, cex = 2, color = "black"),show.legend = "point")+
scale_fill_manual(values = "red",name = "accidents")+
ggtitle("Types de voie cyclable et Accidents routiers impliquant des vélos")+
# labs(color = 'Types de voie', point = "Accidents")+
theme(
#Caractéristiques de la légende
legend.position = "top",
legend.title = element_text(colour="grey", size = 11, face = "bold"),
legend.text = element_text(size = 10, face = "italic"),
legend.background = element_rect(fill = "gainsboro", size = 1, linetype = "solid", colour = "red"),
#Caractéristiques de la figure elle-même
plot.background = element_rect(fill = "black")
)
# theme(legend.position = "bottom", )
ggplot()+
geom_sf(data = limites_terrestres, size = 1, color = "black", fill = "white")+
geom_sf(data = pistes_cyclables, size = 1.5, aes(color = TYPE_VOIE),  show.legend = "line")+
scale_color_manual(values = couleurs_voie,name = "Types de voie")+
#labs(color = 'Types de voie')+
geom_sf(data = accidents_velo, pch = 24, cex = 2, fill = "red", color = "black")+
#geom_sf(data = accidents_velo, aes(fill= "red",pch = 24, cex = 2, color = "black"),show.legend = "point")+
scale_fill_manual(values = "red",name = "accidents")+
ggtitle("Types de voie cyclable et Accidents routiers impliquant des vélos")+
# labs(color = 'Types de voie', point = "Accidents")+
theme(
#Caractéristiques de la légende
legend.position = "top",
legend.title = element_text(colour="grey", size = 11, face = "bold"),
legend.text = element_text(size = 10, face = "italic"),
legend.background = element_rect(fill = "gainsboro", size = 1, linetype = "solid", colour = "red"),
#Caractéristiques de la figure elle-même
panel.background = element_rect(fill = "black")
)
# theme(legend.position = "bottom", )
ggplot()+
geom_sf(data = limites_terrestres, size = 1, color = "black", fill = "white")+
geom_sf(data = pistes_cyclables, size = 1.5, aes(color = TYPE_VOIE),  show.legend = "line")+
scale_color_manual(values = couleurs_voie,name = "Types de voie")+
#labs(color = 'Types de voie')+
geom_sf(data = accidents_velo, pch = 24, cex = 2, fill = "red", color = "black")+
#geom_sf(data = accidents_velo, aes(fill= "red",pch = 24, cex = 2, color = "black"),show.legend = "point")+
scale_fill_manual(values = "red",name = "accidents")+
ggtitle("Types de voie cyclable et Accidents routiers impliquant des vélos")+
# labs(color = 'Types de voie', point = "Accidents")+
theme(
#Caractéristiques de la légende
legend.position = "top",
legend.title = element_text(colour="grey", size = 11, face = "bold"),
legend.text = element_text(size = 10, face = "italic"),
legend.background = element_rect(fill = "gainsboro", size = 1, linetype = "solid", colour = "red"),
#Caractéristiques de la figure elle-même
panel.background = element_rect(fill = "black"), panel.grid.major = NA,
#Caractéristiques du contour
plot.background = element_rect(fill = "green")
)
ggplot()+
geom_sf(data = limites_terrestres, size = 1, color = "black", fill = "white")+
geom_sf(data = pistes_cyclables, size = 1.5, aes(color = TYPE_VOIE),  show.legend = "line")+
scale_color_manual(values = couleurs_voie,name = "Types de voie")+
#labs(color = 'Types de voie')+
geom_sf(data = accidents_velo, pch = 24, cex = 2, fill = "red", color = "black")+
#geom_sf(data = accidents_velo, aes(fill= "red",pch = 24, cex = 2, color = "black"),show.legend = "point")+
scale_fill_manual(values = "red",name = "accidents")+
ggtitle("Types de voie cyclable et Accidents routiers impliquant des vélos")+
# labs(color = 'Types de voie', point = "Accidents")+
theme(
#Caractéristiques de la légende
legend.position = "top",
legend.title = element_text(colour="grey", size = 11, face = "bold"),
legend.text = element_text(size = 10, face = "italic"),
legend.background = element_rect(fill = "gainsboro", size = 1, linetype = "solid", colour = "red"),
#Caractéristiques de la figure elle-même
panel.background = element_rect(fill = "black"), panel.grid.major = element_blank(),
#Caractéristiques du contour
plot.background = element_rect(fill = "green")
)
# theme(legend.position = "bottom", )
ggplot()+
geom_sf(data = limites_terrestres, size = 1, color = "black", fill = "white")+
geom_sf(data = pistes_cyclables, size = 1.5, aes(color = TYPE_VOIE),  show.legend = "line")+
scale_color_manual(values = couleurs_voie,name = "Types de voie")+
#labs(color = 'Types de voie')+
geom_sf(data = accidents_velo, pch = 24, cex = 2, fill = "red", color = "black")+
#geom_sf(data = accidents_velo, aes(fill= "red",pch = 24, cex = 2, color = "black"),show.legend = "point")+
scale_fill_manual(values = "red",name = "accidents")+
ggtitle("Types de voie cyclable et Accidents routiers impliquant des vélos")+
# labs(color = 'Types de voie', point = "Accidents")+
theme(
#Caractéristiques de la légende
legend.position = "top",
legend.title = element_text(colour="grey", size = 11, face = "bold"),
legend.text = element_text(size = 10, face = "italic"),
legend.background = element_rect(fill = "gainsboro", size = 1, linetype = "solid", colour = "red"),
#Caractéristiques de la figure elle-même
panel.background = element_rect(fill = "black"), #le dessous de la carte
plot.background = element_rect(fill = "black"),  #le contour de la carte
panel.grid.major = element_blank(),  #retirer la grille cartésienne
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
)
ggplot()+
geom_sf(data = limites_terrestres, size = 1, color = "black", fill = "white")+
geom_sf(data = pistes_cyclables, size = 1.5, aes(color = TYPE_VOIE),  show.legend = "line")+
scale_color_manual(values = couleurs_voie,name = "Types de voie")+
#labs(color = 'Types de voie')+
geom_sf(data = accidents_velo, pch = 24, cex = 2, fill = "red", color = "black")+
#geom_sf(data = accidents_velo, aes(fill= "red",pch = 24, cex = 2, color = "black"),show.legend = "point")+
scale_fill_manual(values = "red",name = "accidents")+
ggtitle("Types de voie cyclable et Accidents routiers impliquant des vélos")+
# labs(color = 'Types de voie', point = "Accidents")+
theme(
#Caractéristiques de la légende
legend.position = "top",
legend.title = element_text(colour="grey", size = 11, face = "bold"),
legend.text = element_text(size = 10, face = "italic"),
legend.background = element_rect(fill = "gainsboro", size = 1, linetype = "solid", colour = "red"),
#Caractéristiques de la figure elle-même
panel.background = element_rect(fill = "black"), #le dessous de la carte
plot.background = element_rect(fill = "black"),  #le contour de la carte
panel.grid.major = element_blank(),  #retirer la grille cartésienne
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
)
# theme(legend.position = "bottom", )
ggplot()+
geom_sf(data = limites_terrestres, size = 1, color = "black", fill = "white")+
geom_sf(data = pistes_cyclables, size = 1.5, aes(color = TYPE_VOIE),  show.legend = "line")+
scale_color_manual(values = couleurs_voie,name = "Types de voie")+
#labs(color = 'Types de voie')+
geom_sf(data = accidents_velo, pch = 24, cex = 2, fill = "red", color = "black")+
#geom_sf(data = accidents_velo, aes(fill= "red",pch = 24, cex = 2, color = "black"),show.legend = "point")+
scale_fill_manual(values = "red",name = "accidents")+
ggtitle("Types de voie cyclable et Accidents routiers impliquant des vélos")+
# labs(color = 'Types de voie', point = "Accidents")+
theme(
#Caractéristiques de la légende
legend.position = "top",
legend.title = element_text(colour="grey", size = 11, face = "bold"),
legend.text = element_text(size = 10, face = "italic"),
legend.background = element_rect(fill = "gainsboro", size = 1, linetype = "solid", colour = "red"),
#Caractéristiques de la figure elle-même
panel.background = element_rect(fill = "black"), #le dessous de la carte
plot.background = element_rect(fill = "black"),  #le contour de la carte
panel.grid.major = element_blank(),  #retirer la grille cartésienne
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(colour = "white", size = 12)
)
# theme(legend.position = "bottom", )
ggplot()+
geom_sf(data = limites_terrestres, size = 1, color = "black", fill = "white")+
geom_sf(data = pistes_cyclables, size = 1.5, aes(color = TYPE_VOIE),  show.legend = "line")+
scale_color_manual(values = couleurs_voie,name = "Types de voie")+
#labs(color = 'Types de voie')+
geom_sf(data = accidents_velo, pch = 24, cex = 2, fill = "red", color = "black")+
#geom_sf(data = accidents_velo, aes(fill= "red",pch = 24, cex = 2, color = "black"),show.legend = "point")+
scale_fill_manual(values = "red",name = "accidents")+
ggtitle("Types de voie cyclable et Accidents routiers impliquant des vélos")+
# labs(color = 'Types de voie', point = "Accidents")+
theme(
#Caractéristiques de la légende
legend.position = "top",
legend.title = element_text(colour="blue", size = 11, face = "bold"),
legend.text = element_text(size = 10, face = "italic"),
legend.background = element_rect(fill = "white", size = 1, linetype = "solid", colour = "red"),
legend.key = element_rect(fill = "white"),
#Caractéristiques de la figure elle-même
panel.background = element_rect(fill = "black"), #le dessous de la carte
plot.background = element_rect(fill = "black"),  #le contour de la carte
panel.grid.major = element_blank(),  #retirer la grille cartésienne
axis.ticks = element_blank(),  #retirer les traits sur les axes
axis.text.x = element_blank(), #retirer les traits les noms ou les numéros de ces traits
axis.text.y = element_blank(),
plot.title = element_text(colour = "white", size = 12)
)
# theme(legend.position = "bottom", )
ggplot()+
geom_sf(data = limites_terrestres, size = 1, color = "black", fill = "white")+
geom_sf(data = pistes_cyclables, size = 1.5, aes(color = TYPE_VOIE),  show.legend = "line")+
scale_color_manual(values = couleurs_voie,name = "Types de voie")+
#labs(color = 'Types de voie')+
geom_sf(data = accidents_velo, pch = 24, cex = 2, fill = "red", color = "black")+
#geom_sf(data = accidents_velo, aes(fill= "red",pch = 24, cex = 2, color = "black"),show.legend = "point")+
scale_fill_manual(values = "red",name = "accidents")+
ggtitle("Types de voie cyclable et Accidents routiers impliquant des vélos")+
# labs(color = 'Types de voie', point = "Accidents")+
theme(
#Caractéristiques de la légende
legend.position = "top",
legend.box = "vertical",
legend.title = element_text(colour="blue", size = 11, face = "bold"),
legend.text = element_text(size = 10, face = "italic"),
legend.background = element_rect(fill = "white", size = 1, linetype = "solid", colour = "red"),
legend.key = element_rect(fill = "white"),
#Caractéristiques de la figure elle-même
panel.background = element_rect(fill = "black"), #le dessous de la carte
plot.background = element_rect(fill = "black"),  #le contour de la carte
panel.grid.major = element_blank(),  #retirer la grille cartésienne
axis.ticks = element_blank(),  #retirer les traits sur les axes
axis.text.x = element_blank(), #retirer les traits les noms ou les numéros de ces traits
axis.text.y = element_blank(),
plot.title = element_text(colour = "white", size = 12)
)
# theme(legend.position = "bottom", )
ggplot()+
geom_sf(data = limites_terrestres, size = 1, color = "black", fill = "white")+
geom_sf(data = pistes_cyclables, size = 1.5, aes(color = TYPE_VOIE),  show.legend = "line")+
scale_color_manual(values = couleurs_voie,name = "Types de voie")+
#labs(color = 'Types de voie')+
geom_sf(data = accidents_velo, pch = 24, cex = 2, fill = "red", color = "black")+
#geom_sf(data = accidents_velo, aes(fill= "red",pch = 24, cex = 2, color = "black"),show.legend = "point")+
scale_fill_manual(values = "red",name = "accidents")+
ggtitle("Types de voie cyclable et Accidents routiers impliquant des vélos")+
# labs(color = 'Types de voie', point = "Accidents")+
theme(
#Caractéristiques de la légende
legend.position = "top",
legend.title = element_text(colour="blue", size = 11, face = "bold"),
legend.text = element_text(size = 10, face = "italic"),
legend.background = element_rect(fill = "white", size = 1, linetype = "solid", colour = "red"),
legend.key = element_rect(fill = "white"),
#Caractéristiques de la figure elle-même
panel.background = element_rect(fill = "black"), #le dessous de la carte
plot.background = element_rect(fill = "black"),  #le contour de la carte
panel.grid.major = element_blank(),  #retirer la grille cartésienne
axis.ticks = element_blank(),  #retirer les traits sur les axes
axis.text.x = element_blank(), #retirer les traits les noms ou les numéros de ces traits
axis.text.y = element_blank(),
plot.title = element_text(colour = "white", size = 16)
)
# theme(legend.position = "bottom", )
ggplot()+
geom_sf(data = limites_terrestres, size = 1, color = "black", fill = "white")+
geom_sf(data = pistes_cyclables, size = 1.5, aes(color = TYPE_VOIE),  show.legend = "line")+
scale_color_manual(values = couleurs_voie,name = "Types de voie")+
#labs(color = 'Types de voie')+
geom_sf(data = accidents_velo, pch = 24, cex = 2, fill = "red", color = "black")+
#geom_sf(data = accidents_velo, aes(fill= "red",pch = 24, cex = 2, color = "black"),show.legend = "point")+
scale_fill_manual(values = "red",name = "accidents")+
ggtitle("Types de voie cyclable et Accidents routiers impliquant des vélos")+
# labs(color = 'Types de voie', point = "Accidents")+
theme(
#Caractéristiques de la légende
legend.position = "top",
legend.title = element_text(colour="blue", size = 11, face = "bold"),
legend.text = element_text(size = 10, face = "italic"),
legend.background = element_rect(fill = "white", size = 1, linetype = "solid", colour = "red"),
legend.key = element_rect(fill = "white"),
#Caractéristiques de la figure elle-même
panel.background = element_rect(fill = "black"), #le dessous de la carte
plot.background = element_rect(fill = "black"),  #le contour de la carte
panel.grid.major = element_blank(),  #retirer la grille cartésienne
axis.ticks = element_blank(),  #retirer les traits sur les axes
axis.text.x = element_blank(), #retirer les traits les noms ou les numéros de ces traits
axis.text.y = element_blank(),
plot.title = element_text(colour = "white", size = 16, hjust = 0.5)
)
# theme(legend.position = "bottom", )
ggplot()+
geom_sf(data = limites_terrestres, size = 1, color = "black", fill = "white")+
geom_sf(data = pistes_cyclables, size = 1.5, aes(color = TYPE_VOIE),  show.legend = "line")+
scale_color_manual(values = couleurs_voie,name = "Types de voie")+
geom_sf(data = accidents_velo, pch = 24, cex = 2, fill = "red", color = "black")+
scale_fill_manual(values = "red",name = "accidents")+
ggtitle("Types de voie cyclable et Accidents routiers impliquant des vélos")+
theme(
#Caractéristiques de la figure elle-même
panel.background = element_rect(fill = "black"), #le dessous de la carte
plot.background = element_rect(fill = "black"),  #le contour de la carte
panel.grid.major = element_blank(),              #retirer la grille cartésienne
axis.ticks = element_blank(),                    #retirer les traits sur les axes
axis.text.x = element_blank(),                   #retirer les traits les noms ou les numéros de ces traits
axis.text.y = element_blank(),
plot.title = element_text(colour = "white", size = 16, hjust = 0.5), #Centrer le titre de la carte
#Caractéristiques de la légende
legend.position = "top",                         #position de la légende
legend.title = element_text(colour="blue", size = 11, face = "bold"), #titre de la légende
legend.text = element_text(size = 10, face = "italic"),               #texte des éléments de la légende
legend.background = element_rect(fill = "white", size = 1, linetype = "solid", colour = "red"), #rectangle autour de la légende
legend.key = element_rect(fill = "white")        #couleur blanche sous les éléments de la légende
)
st_crs(limites_terrestres)
limites2<-spTransform(limites_terrestres, CRS("+proj=longlat +datum=WGS84"))
library(rgdal)
limites2<-spTransform(limites_terrestres, CRS("+proj=longlat +datum=WGS84"))
limites_terrestres
p<-shapefile(limites_terrestres)
limites2<-stTransform(limites_terrestres, CRS("+proj=longlat +datum=WGS84"))
limites2<-st_transform(limites_terrestres, CRS("+proj=longlat +datum=WGS84"))
ggplot() +
geom_sf(data = limites2, size = 1, color = "black", fill = "white") +
ggtitle("Limites terrestres de l'île de Montréal")
ggplot() +
geom_sf(data = limites_terrestres, size = 1, color = "black", fill = "white") +
geom_sf(data = limites2, size = 1, color = "black", fill = "yellow") +
ggtitle("Limites terrestres de l'île de Montréal")
x11()
ggplot() +
+ geom_sf(data = limites_terrestres, size = 1, color = "black", fill = "white")
ggplot() +
geom_sf(data = limites_terrestres, size = 1, color = "black", fill = "white")
x11()
ggplot() +
geom_sf(data = limites2, size = 1, color = "black", fill = "yellow")
sf_crs(limites2)
st_crs(limites2)
st_crs(limites_terrestres)
limites2<-st_transform(limites_terrestres, CRS("+proj=robin +datum=WGS84"))
ggplot() +
geom_sf(data = limites_terrestres, size = 1, color = "black", fill = "white") +
geom_sf(data = limites2, size = 1, color = "black", fill = "yellow") +
ggtitle("Limites terrestres de l'île de Montréal")
limites2<-st_transform(limites_terrestres, CRS("+proj=robin +datum=WGS84"))
ggplot() +
geom_sf(data = limites_terrestres, size = 1, color = "black", fill = "white") +
geom_sf(data = limites2, size = 1, color = "black", fill = "yellow") +
ggtitle("Limites terrestres de l'île de Montréal")
carte1<-geom_sf(data = limites_terrestres, size = 1, color = "black", fill = "white")
carte2<-geom_sf(data = limites2, size = 1, color = "black", fill = "yellow")
ggplot()+
grid.arrange(carte1, carte2, nrow = 1)
carte1<-geom_sf(data = limites_terrestres, size = 1, color = "black", fill = "white")
carte2<-geom_sf(data = limites2, size = 1, color = "black", fill = "yellow")
grid.arrange(carte1, carte2, nrow = 1)
install.packages("ggpubr")
install.packages("ggpubr")
source("root_path.R")
root = root_path()
module<- paste(root, "/Module3", sep = "")
path=paste(root, "/Structure_test/Cours_SpatialR", sep = "")
chunkoptions=paste(path,"/bin/chunk-options.R", sep = "")
source(chunkoptions)
library(raster)
library(rgdal)
library(ggplot2)
library(dplyr)
library(sf)
library(svglite) ## J'ai pas besoin de ça pour créer les figures, mais pour les inclure dans le markdown, oui.
nom_du_fichier<- paste(module, "/Montreal_Velo/terre/terre_shp.shp", sep = "")
limites_terrestres <- st_read(nom_du_fichier)
nom_du_fichier<- paste(module, "/Montreal_Velo/pistes/pistes_cyclables_type.shp", sep = "")
pistes_cyclables <- st_read(nom_du_fichier)
nom_du_fichier<- paste(module, "/Montreal_Velo/accidents/accidents2018_Mtl_velo.shp", sep = "")
accidents_velo <- st_read(nom_du_fichier)
st_geometry_type(limites_terrestres)
st_geometry_type(pistes_cyclables)
st_geometry_type(accidents_velo)
st_crs(limites_terrestres)
st_crs(pistes_cyclables)
st_crs(accidents_velo)
st_bbox(limites_terrestres)
st_bbox(pistes_cyclables)
st_bbox(accidents_velo)
limites_terrestres
pistes_cyclables
accidents_velo
ggplot() +
geom_sf(data = limites_terrestres, size = 1, color = "black", fill = "white") +
ggtitle("Limites terrestres de l'île de Montréal")
ggplot() +
geom_sf(data = pistes_cyclables, size = 1, color = "darkgreen") +
ggtitle("Pistes cyclables sur l'île de Montréal")
ggplot() +
geom_sf(data = accidents_velo, pch = 19, cex = 1.25, color = "red") +
ggtitle("Accidents de la route avec cyclistes sur l'île de Montréal")
knitr::include_graphics('Module3/3_symbolesR.png')
ggplot() +
geom_sf(data = accidents_velo, pch = 24, cex = 1.5, color = "black", fill = "orange") +
ggtitle("Accidents de la route avec cyclistes sur l'île de Montréal")
pistes_cyclables
levels(pistes_cyclables$TYPE_VOIE)
Bande <-pistes_cyclables %>%
filter(TYPE_VOIE =="Bande cyclable")
ggplot()+
geom_sf(data = Bande,  size = 1, color = "darkgreen")+
ggtitle("Pistes cyclables sur l'île de Montréal", subtitle = "Bande cyclable")
couleurs_voie<-c("darkgreen", "turquoise", "yellow","darkblue","violet","orange")
ggplot()+
geom_sf(data = pistes_cyclables,  aes(color = TYPE_VOIE))+
scale_color_manual(values = couleurs_voie)+
labs(color = 'Types de voie')+
ggtitle("Pistes cyclables sur l'île de Montréal", subtitle = "Types de voie")
tailles_voie<-c(1,1.2,1.5,1.7,2,2.2)
ggplot()+
geom_sf(data = pistes_cyclables,  aes(color = TYPE_VOIE, size = TYPE_VOIE))+
scale_color_manual(values = couleurs_voie)+
labs(color = 'Types de voie')+
scale_size_manual(values = tailles_voie)+
labs(size = 'Types de voie')+
ggtitle("Pistes cyclables sur l'île de Montréal", subtitle = "Types de voie")+
theme(legend.position = "bottom")
ggplot()+
geom_sf(data = limites_terrestres, size = 1, color = "black", fill = "white")+
geom_sf(data = pistes_cyclables, size = 1, color = "darkgreen")+
geom_sf(data = accidents_velo, pch = 19, cex = 1.25, color = "red")+
ggtitle("Pistes cyclables sur l'île de Montréal et Accidents routiers impliquant des vélos")
ggplot()+
geom_sf(data = limites_terrestres, size = 1, color = "black", fill = "white")+
geom_sf(data = pistes_cyclables, size = 1.5, aes(color = TYPE_VOIE),  show.legend = "line")+
scale_color_manual(values = couleurs_voie,name = "Types de voie")+
geom_sf(data = accidents_velo, pch = 24, cex = 2, fill = "red", color = "black")+
ggtitle("Types de voie cyclable et Accidents routiers impliquant des vélos")+
theme(
#Caractéristiques de la figure elle-même
panel.background = element_rect(fill = "black"), #le dessous de la carte
plot.background = element_rect(fill = "black"),  #le contour de la carte
panel.grid.major = element_blank(),              #retirer la grille cartésienne
axis.ticks = element_blank(),                    #retirer les traits sur les axes
axis.text.x = element_blank(),                   #retirer les traits les noms ou les numéros de ces traits
axis.text.y = element_blank(),
plot.title = element_text(colour = "white", size = 16, hjust = 0.5), #Centrer le titre de la carte
#Caractéristiques de la légende
legend.position = "top",                         #position de la légende
legend.title = element_text(colour="blue", size = 11, face = "bold"), #titre de la légende
legend.text = element_text(size = 10, face = "italic"),               #texte des éléments de la légende
legend.background = element_rect(fill = "white", size = 1, linetype = "solid", colour = "red"), #rectangle autour de la légende
legend.key = element_rect(fill = "white")        #couleur blanche sous les éléments de la légende
)
limites2<-st_transform(limites_terrestres, CRS("+proj=robin +datum=WGS84"))
limites2<-st_transform(limites_terrestres, CRS("+proj=robin +datum=WGS84"))
library(ggpubr)
carte1<-geom_sf(data = limites_terrestres, size = 1, color = "black", fill = "white")
carte2<-geom_sf(data = limites2, size = 1, color = "black", fill = "yellow")
figure <- ggarrange(carte1, carte2, labels = c("A","B"),ncol =2, nrow=1)
carte1<-ggplot()+
geom_sf(data = limites_terrestres, size = 1, color = "black", fill = "white")
carte2<-ggplot()+
geom_sf(data = limites2, size = 1, color = "black", fill = "yellow")
figure <- ggarrange(carte1, carte2, labels = c("A","B"),ncol =2, nrow=1)
figure
carte1<-ggplot()+
geom_sf(data = limites_terrestres, size = 1, color = "black", fill = "white") +
ggtitle("Projection Mercator")
carte2<-ggplot()+
geom_sf(data = limites2, size = 1, color = "black", fill = "yellow") +
ggtitle("Projection Robinson")
figure <- ggarrange(carte1, carte2, labels = c("A","B"),ncol =2, nrow=1)
carte1<-ggplot()+
geom_sf(data = limites_terrestres, size = 1, color = "black", fill = "white") +
ggtitle("Projection Mercator")
carte2<-ggplot()+
geom_sf(data = limites2, size = 1, color = "black", fill = "yellow") +
ggtitle("Projection Robinson")
figure <- ggarrange(carte1, carte2, labels = c("A","B"),ncol =2, nrow=1)
figure
carte1<-ggplot()+
geom_sf(data = limites_terrestres, size = 1, color = "black", fill = "white") +
ggtitle("Projection Mercator")
carte2<-ggplot()+
geom_sf(data = limites2, size = 1, color = "black", fill = "yellow") +
ggtitle("Projection Robinson")
figure <- ggarrange(carte1, carte2, labels = c("A","B"),ncol =1, nrow=2)
figure
limites_terrestres_rob<-st_transform(limites_terrestres, CRS("+proj=robin +datum=WGS84"))
carte1<-ggplot()+
geom_sf(data = limites_terrestres, size = 1, color = "black", fill = "white") +
ggtitle("Projection Mercator")
carte2<-ggplot()+
geom_sf(data = limites_terrestres_rob, size = 1, color = "black", fill = "yellow") +
ggtitle("Projection Robinson")
figure <- ggarrange(carte1, carte2, labels = c("A","B"),ncol =2, nrow=1)
figure
carte1<-ggplot()+
geom_sf(data = limites_terrestres, size = 1, color = "black", fill = "white") +
ggtitle("Projection Mercator")
carte2<-ggplot()+
geom_sf(data = limites_terrestres_rob, size = 1, color = "black", fill = "yellow") +
ggtitle("Projection Robinson")
figure <- ggarrange(carte1, carte2, labels = c("A","B"),ncol = 1, nrow = 2)
figure
nom_du_fichier<- paste(module, "/Montreal_Velo/terre/terre_shp.shp", sep = "")
limites_terrestres <- st_read(limites_terrestres_rob,nom_du_fichier)
nom_du_fichier<- paste(module, "/Montreal_Velo/terre/terre_shp.shp", sep = "")
limites_terrestres <- st_write(limites_terrestres_rob,nom_du_fichier)
nom_du_fichier<- paste(module, "/Montreal_Velo/terre/terre_rob_shp.shp", sep = "")
limites_terrestres <- st_write(limites_terrestres_rob,nom_du_fichier)
Sweave("03-Module3.Rmd")
preview_chapter("03_Module3.Rmd")
devtools::install_github('yihui/tinytex')
install.packages("devtools")
library(devtools)
devtools::install_github('yihui/tinytex')
library(tinytex)
